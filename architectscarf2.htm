<html>
<head>
<title>Architect Scarf Estimates</title>
<script
  src="https://code.jquery.com/jquery-3.3.1.min.js"
  integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
  crossorigin="anonymous"></script>

<style type="text/css">
body {
  padding: 20px;
  font-family: sans-serif;
  background-color: #ccc;
}

.box {
  width: 300px;
  margin: 0 auto;
  position: relative;
  overflow: hidden;
}

.cover {
  width: 0; 
  height: 0; 
  border-top: 400px solid #cfcfcf;
  border-left: 400px solid transparent;
  border-right: 400px solid transparent;
  position: absolute;
  right: -400px;
  opacity: 0.9;
}

.stats,
.directions,
.notes {
  margin: 20px auto;
  background-color: #fff;
  min-height: 50px;
  padding: 10px;
  white-space: pre-line;
}

.eye {
  background-image: url('eye.png');
  background-size: 125px;
}

.lac {
  background-image: url('lace.png');
  background-size: 150px;
}

.rib {
  background-image: url('line.png');
  background-size: 600px;
}

.lin {
  background-image: url('line.png');
  background-size: 250px;
}
</style>
</head>

<body>

<h1>Architect Scarf</h1>
<div id="triangles"></div>


<script type="text/javascript">

var mustard = "#b93";
var wine = "#626";
// Measured after the last wine eyelet block and the triangle is acute at this ratio
var measuredWidthToHeightRatio = 25 / 39;

function drawTriangle(boxId, stripes) {
  $("#triangles").append("<div id='" + boxId + "' class='box'></div>");
  $("#" + boxId).append("<h2>" + boxId + "</h2>");
  $("#" + boxId).append("<div class='cover'></div>");
  $("#" + boxId).append("<div class='stripes'></div>");
  $("#" + boxId).append("<div class='stats'></div>");
  $("#" + boxId).append("<div class='notes'></div>")
  $("#" + boxId).append("<div class='directions'></div>")

  // Draw the stripes from the written list
  const stripesEl = $("#" + boxId + " .stripes");
  let height = 0;
  let topWidth = 0;
  let bottomWidth = 0;
  let totalHeight = 0;
  let area = 0;
  let color = '';
  let areas = {};
  areas[wine] = 0;
  areas[mustard] = 0;

  $.each(stripes, function(index, value) {
    color = value[2];
    height = parseInt(value[0]) * 2;
    totalHeightAfter = totalHeight + height;
    topWidth = totalHeight * measuredWidthToHeightRatio;
    bottomWidth = totalHeightAfter * measuredWidthToHeightRatio;

    var el = document.createElement("div");
    el.style.backgroundColor = color;
    el.style.height = height + "px";
    el.style.width = bottomWidth + "px";
    el.className = value[1];
    stripesEl.append(el);

    // area of rectangle + area of triangle at the right side
    area = (height * topWidth) + (height * bottomWidth * 0.5); 
    areas[color] += area;
    if (height > 4) {
      // console.log(`height: ${height}`);
      // console.log(`topWidth: ${topWidth}`);
      // console.log(`bottomWidth: ${bottomWidth}`);
      // console.log(`totalHeight: ${totalHeight}`);
      // console.log(`totalHeightAfter: ${totalHeightAfter}`);
      // console.log(`area: ${area}`);
      // console.log(`${color == mustard ? 'mustard' : 'wine'} area: ${areas[color]}`);
    }

    totalHeight = totalHeightAfter;
  });

  // Resize the box
  var totalWidth = totalHeight * measuredWidthToHeightRatio;
  // console.log(`totalHeight: ${totalHeight}`);
  // console.log(`measuredWidthToHeightRatio: ${measuredWidthToHeightRatio}`);
  // console.log(`totalWidth: ${totalWidth}`);
  $("#" + boxId + " .stripes").css("width", totalWidth + "px");
  $("#" + boxId + " .cover").css("width", totalWidth + "px");
  $("#" + boxId).css("width", totalWidth + "px");

  $("#" + boxId + " .cover")
    .css("border-top-width", totalHeight + "px")
    .css("border-left-width", totalWidth + "px")
    .css("border-right-width", totalWidth + "px")
    .css("right", (-2 * totalWidth) + "px");


  // Market spice shawl: 335g total or 1198/1200 yards
  // This shawl: 1038
  // console.log(areas);
  // HEY! You! A ball has 100g, not 50! Don't make that mistake a THIRD time
  // first section and fade of wine: 7.5g = 252 sq px = 0.02976
  // fade and first section of mustard: 11.5g = 630 sq px = 0.01825
  // after 2nd striped ribbing mustard: 56g = 5112sq px = 0.0109

  // http://www.wolframalpha.com/input/?i=triangle+with+sides+39+42+27+inches
  // after 2nd striped ribbing mustard: 23g = 5112sq px = 0.0109
  // after 2nd striped ribbing wine: 89.5g = 13706sq px = 0.0065
  // after 4th eyelet lace wine = 100 = 39000 = 0.0025

  // after 4th eyelet lace 72 = 100g = 142169px = 0.0007

  var gramToPxMust = 0.0006;
  var gramToPxWine = 0.0007;
  $("#" + boxId + " .stats").text(
    `Mustard: 
    - ${areas[mustard].toLocaleString('en-US')} pixels²
    - ${(areas[mustard] * gramToPxMust).toFixed(0)} grams
    - ${(areas[mustard] * gramToPxMust / 100 * 100).toFixed(1)}% of 100g

    Wine:  
    - ${areas[wine].toLocaleString('en-US')} pixels²
    - ${(areas[wine] * gramToPxWine).toFixed(0)} grams
    - ${(areas[wine] * gramToPxWine / 150 * 100).toFixed(1)}% of 150g
    `
  );
}

function writeDirections(boxId, stripes) {
  let directions = `<h2>Architect Scarf Instructions</h2>

    Cast on: cast on 6 stitches
    Setup row: knit to end

    Continue in pattern:
    RS (odd) rows: use color specified below; k1, YO, k2tog, k to last 2 sts, kfbf, drop YO from previous row, k1 (1 st inc)
    WS (even) rows: use color from previous row; k across

    Optional lace sections (mustard).
    –  Row 1: k1, *yo, sl1 k2, psso2*, repeat from * to * as necessary, knit 2 last stitches.
    –  Row 2: Purl across
    –  Row 3: *yo, sl1 k2, psso2*, repeat from * to *  to end.
    –  Row 4: Purl across
  `;
  let lastRow = 1;
  let rows, color;
  let wasLastRowFade = false;

  $.each(stripes, function(index, value) {
    rows = value[0] * 2;
    color = value[2];
    if (rows > 4) {
      directions += `
        Rows ${lastRow} to ${lastRow + rows - 1}: ${(color == mustard ? "mustard" : "wine")} (${rows} rows, ${rows / 2} RS rows)`;
      wasLastRowFade = false;
    } else  {
      if (!wasLastRowFade) {
        directions += `
          Fade by ${rows} for a while`;
      } else {
        directions += `.`;
      }
      wasLastRowFade = true;
    }

    lastRow = lastRow + rows;
  });

  $("#" + boxId + " .directions").html(directions);
}




var originalStripes = [
  // 1/2 eyelets
  [90, 'eye', wine],
  // 3 garter
  [4,  'gar', mustard],
  // 4 stripe ribbing
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  // 5 garter & eyelets 
  [4,  'gar', mustard],
  [8,  'eye', wine],
  // 6 eyelets
  [36, 'eye', wine],
  // 7 = 3 
  [4, 'gar', mustard],
  // 8 = 4
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  // 9 = 5
  [4,  'gar', mustard],
  [8,  'eye', wine],
  // 10 = 6
  [36, 'eye', wine],
  // 11 = 3 
  [4,  'gar', mustard],
  // 12 twisted
  [16, 'lin', wine],
  // 13 = 3 
  [4,  'gar', mustard],
  // 14 ribbing and band
  [2,  'rib', wine],
  [2,  'rib', mustard],
  [2,  'rib', wine],
  [2,  'rib', mustard],
  [2,  'rib', wine],
  [2,  'rib', mustard],
  [2,  'rib', wine],
  [4,  'gar', mustard],
  // 15 = 12
  [16, 'lin', wine],
  // 16 = 3 
  [4,  'gar', mustard],
  // 17 garter
  [4,  'gar', wine],
  // 18
  [40, 'lac', mustard],
  // 19
  [4,  'lac', mustard],
  [4,  'gar', wine],
  // 20 ribbing and garter edge
  [8,  'rib', mustard],
  [6,  'gar', wine],
];



var newStripes = [
  // 1/2 eyelets
  [90, 'eye', wine],
  // 3 garter
  [4,  'gar', mustard],
  // 4 stripe ribbing
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  // 5 garter & eyelets 
  [4,  'gar', mustard],
  [8,  'eye', wine],
  // 6 eyelets
  [36, 'eye', wine],
  // 7 = 3 
  [4, 'gar', mustard],
  // 8 = 4
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  // 9 = 5
  [4,  'gar', mustard],
  [8,  'eye', wine],
  // 10 = 6
  [36, 'eye', wine],
  // START duplicate stripe rib and eyelet -----
  // 7 = 3 
  [4, 'gar', mustard],
  // 8 = 4
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  [2, 'rib', mustard],
  [2, 'rib', wine],
  // 9 = 5
  [4,  'gar', mustard],
  [8,  'eye', wine],
  // 10 = 6
  [31, 'eye', wine],
  // END duplicate stripe rib and eyelet ------
  // 11 = 3 
  [4,  'gar', mustard],
  // 12 twisted
  [16, 'lin', wine],
  // 13 = 3
  [4,  'gar', mustard],
  // 14 ribbing and band
  [2,  'rib', wine],
  [2,  'rib', mustard],
  [2,  'rib', wine],
  [2,  'rib', mustard],
  [2,  'rib', wine],
  [2,  'rib', mustard],
  [2,  'rib', wine],
  [4,  'gar', mustard],
  // 15 = 12
  [16, 'lin', wine],
  // 16 = 3 
  [4,  'gar', mustard],
  // 17 garter
  [4,  'gar', wine],
  // 18
  [40, 'lac', mustard],
  // 19
  [4,  'lac', mustard],
  [4,  'gar', wine],
  // 20 ribbing and garter edge
  [8,  'rib', mustard],
  [6,  'gar', wine],
];

drawTriangle("box-new", newStripes);
writeDirections("box-new", newStripes);

// console.log("---------------");
// console.log("---------------");
drawTriangle("box-original", originalStripes);

</script>

</body>
